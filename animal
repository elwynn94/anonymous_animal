<?php
if(!defined("__XE__")) exit();

if($called_position == 'after_module_proc' && $this->act == "procBoardInsertDocument") {

	$module = Context::get('module');
	if(!$module) $module = $this->module;
	if($module != 'board') return;
	if(!$addon_info->ad_codes && !$addon_info->biology_code) return;

	if($this->module_info->use_anonymous == 'Y') {
		// 형용사 준비
		$ad_codes = explode(',',$addon_info->ad_codes);
		$ad_codes_counts = count($ad_codes);
		// 생물명 준비
		$biology_code = explode(',',$addon_info->biology_code);
		$biology_code_counts = count($biology_code);

		$logged_info = Context::get('logged_info');

		$args = new stdClass();
		$args->document_srl = $this->get('document_srl');

		// 인물 구분코드
		$id_code1 = intval(substr(preg_replace("/[a-z]/i",'',md5($args->document_srl.$addon_info->security_code1.$logged_info->member_srl)),0,5));
		$id_code1 = $id_code1 % $ad_codes_counts;

		$id_code2 = intval(substr(preg_replace("/[a-z]/i",'',md5($args->document_srl.$addon_info->security_code2.$logged_info->member_srl)),1,5));
		$id_code2 = $id_code2 % $biology_code_counts;

		// 닉네임 치환
		$args->nick_name = trim($ad_codes[$id_code1]).' '.trim($biology_code[$id_code2]);

		$output = executeQuery('addons.anonymous_biology.updatedocuments', $args);
	}
}

if($called_position == 'after_module_proc' && $this->act == "procBoardInsertComment") {
	if($this->module_info->use_anonymous == 'Y') {
		if(!$addon_info->ad_codes && !$addon_info->biology_code) return;
		// 형용사 준비
		$ad_codes = explode(',',$addon_info->ad_codes);
		$ad_codes_counts = count($ad_codes);
		// 생물명 준비
		$biology_code = explode(',',$addon_info->biology_code);
		$biology_code_counts = count($biology_code);

		$args->document_srl = Context::get('document_srl');
		$args->comment_srl = $this->get('comment_srl');

		$oDocumentModel = &getModel('document');
		$oDocument = $oDocumentModel->getDocument($args->document_srl);
		$oget_member_srl = $oDocument->get('member_srl');

		$logged_info = Context::get('logged_info');
		$check = $oget_member_srl != -1*$logged_info->member_srl ? true : false;

		if(!$logged_info->member_srl && !$oget_member_srl) {
			//'회원 글작성자'와 '비회원 댓글작성자'의 ip가 우연히 같을 경우 '글쓴이'로 표시하지 않도록 함
			$logged_info->member_srl = $_SERVER['REMOTE_ADDR']; //방금 댓글 쓴 사용자의 ip
			$oget_member_srl = $oDocument->get('ipaddress'); //글을 쓴 사용자의 ip

			$check = $oget_member_srl == $logged_info->member_srl ? false : true;
			unset($logged_info->member_srl);
			unset($oget_member_srl);
		}

		// 인물 구분코드
		$id_code1 = intval(substr(preg_replace("/[a-z]/i",'',md5($args->document_srl.$addon_info->security_code1.$logged_info->member_srl)),0,5));
		$id_code1 = $id_code1 % $ad_codes_counts;

		$id_code2 = intval(substr(preg_replace("/[a-z]/i",'',md5($args->document_srl.$addon_info->security_code2.$logged_info->member_srl)),1,5));
		$id_code2 = $id_code2 % $biology_code_counts;

		// 닉네임 치환
		if($check)
		{
			$args->nick_name = trim($ad_codes[$id_code1]).' '.trim($biology_code[$id_code2]);
		}
		else
		{
			$args->nick_name = "글쓴이";
		}
		executeQuery('addons.anonymous_biology.updatecomments', $args);
	}
}
?>
